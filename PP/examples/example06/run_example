#!/bin/sh

###############################################################################
##
##  HIGH VERBOSITY EXAMPLE
##
###############################################################################

# run from directory where this script is
cd `dirname $0`
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example calculates the band structure of ferromagnetic bcc-Fe."
$ECHO "in the noncollinear spin-orbit case."
$ECHO

# set the needed environment variables
. ../../../environment_variables

# required executables and pseudopotentials
BIN_LIST="pw.x bands.x plotband.x"
PSEUDO_LIST="Fe.rel-pbe-kjpaw.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for gnuplot
GP_COMMAND=`which gnuplot 2>/dev/null`
if [ "$GP_COMMAND" = "" ]; then
        $ECHO
        $ECHO "gnuplot not in PATH"
        $ECHO "Results will not be plotted"
fi


# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE $NETWORK_PSEUDO/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
BAND_COMMAND="$PARA_PREFIX $BIN_DIR/bands.x $PARA_POSTFIX"
PLOTBAND_COMMAND="$BIN_DIR/plotband.x"
$ECHO
$ECHO "  running pw.x     as: $PW_COMMAND"
$ECHO "  running bands.x  as: $BAND_COMMAND"
$ECHO "  running plotband.x  as: $PLOTBAND_COMMAND"
$ECHO

# self-consistent calculation for bcc-Fe with fully relativistic PAW-PP
cat > Fe.scf_pbe.in << EOF
 &control
    calculation = 'scf'
    prefix='Fe',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=  3,
    celldm(1) =5.42,
    nat=  1,
    ntyp= 1,
    nr1=27,
    nr2=27,
    nr3=27,
    noncolin=.true.
    lspinorb=.true.
    starting_magnetization(1)=0.5,
    occupations='smearing',
    smearing='mv',
    degauss=0.04,
    ecutwfc =45.0,
    ecutrho =300.0
 /
 &electrons
    conv_thr =  1.0d-10
 /
ATOMIC_SPECIES
Fe  0.0    Fe.rel-pbe-kjpaw.UPF
ATOMIC_POSITIONS alat
Fe  0.0000000   0.00000000   0.0
K_POINTS AUTOMATIC
8 8 8 1 1 1
EOF
$ECHO "  running the scf calculation for Fe with PAW spin-orbit...\c"
$PW_COMMAND < Fe.scf_pbe.in > Fe.scf_pbe.out
check_failure $?
$ECHO " done"

# self-consistent calculation for bcc-Fe with fully relativistic PAW-PP
cat > Fe.band_pbe.in << EOF
 &control
    calculation = 'bands'
    prefix='Fe',
    point_label_type='BI'
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav=  3,
    celldm(1) =5.42,
    nat=  1,
    ntyp= 1,
    nr1=27,
    nr2=27,
    nr3=27,
    noncolin=.true.
    lspinorb=.true.
    starting_magnetization(1)=0.5,
    occupations='smearing',
    smearing='mv',
    degauss=0.04,
    ecutwfc =45.0,
    ecutrho =300.0
 /
 &electrons
    conv_thr =  1.0d-10
    diagonalization = 'cg'
 /
ATOMIC_SPECIES
Fe  0.0    Fe.rel-pbe-kjpaw.UPF
ATOMIC_POSITIONS alat
Fe  0.0000000   0.00000000   0.0
K_POINTS tpiba_b
3
H1  40
gG  40
0.0 0.0 1.0 1
EOF
$ECHO "  running the band calculation for Fe with PAW and spin-orbit...\c"
$PW_COMMAND < Fe.band_pbe.in > Fe.band_pbe.out
check_failure $?
$ECHO " done"

# self-consistent calculation for bcc-Fe with fully relativistic PAW-PP
cat > Fe.bands.in << EOF
 &bands
    prefix='Fe',
    outdir='$TMP_DIR/'
    filband='fe.band'
    lsym=.true.,
 /
EOF
$ECHO "  checking band symmetry of bcc-Fe with PAW and spin-orbit...\c"
$BAND_COMMAND < Fe.bands.in > Fe.bands.out
check_failure $?
$ECHO " done"

cat > plotband.in << EOF
fe.band
0 50
ciao
EOF
$ECHO "  Plotting the bands...\c"
$PLOTBAND_COMMAND < plotband.in > plotband.out
check_failure $?
$ECHO " done"

#
#  if gnuplot was found, the results are plotted
#
if [ "$GP_COMMAND" = "" ]; then
    break
else
cat > plot.gnu << EOF
set encoding iso_8859_15
set terminal postscript enhanced color "Helvetica" 24
set output "fe.bands.ps"
#
set key off

set xrange [0:2]
set yrange [-.5:0.5]
set arrow from 1,-0.5 to 1,0.5 nohead lw 2 lt -1 front
set xzeroaxis lw 2 lt -1
set border lw 2
unset xtics
set size 0.85,1.0
set ylabel "Energy (eV)"
set label "{/Symbol G}" at -.02,-0.535
set label "{/Symbol G}" at 1.97,-0.535
set label "(1,0,0) H (0,0,1)" at 1.0,-0.535 center
set label " M//(0,0,1) " at 1.47,0.43
set label " D_{4h} [C_{4h}] " at -0.12,0.535 font ",16"
set label " D_{4h} [C_{4h}] " at  0.90,0.535 font ",16"
set label " D_{4h} [C_{4h}] " at  1.82,0.535 font ",16"
set label " C_{2v} [C_{s}] " at  0.4,0.535 font ",16"
set label " D_{4} [C_{4}] " at  1.4,0.535 font ",16"
set label " {/Symbol G}_4 " at 0.55,-0.45 font ",16" tc rgb "blue"
set label " {/Symbol G}_3 " at 0.24,-0.45 font ",16" tc rgb "red"
set label " {/Symbol G}_6 " at 1.08,-0.45 font ",16" tc rgb "black"
set label " {/Symbol G}_7 " at 1.32,-0.45 font ",16" tc rgb "green"
set label " {/Symbol G}_8 " at 1.2,-0.45 font ",16" tc rgb "blue"
set label " {/Symbol G}_5 " at 1.62,-0.45 font ",16" tc rgb "red"
ef=12.5628
plot 'ciao.1.1' u (1.-\$1):(\$2-ef) w l lw 3   lt 1 lc rgb "red", 'ciao.1.2' u (1.-\$1):(\$2-ef) w l lw 3 lt 5 lc rgb "blue", 'ciao.2.1' u (3.-\$1):(\$2-ef) w l lw 3 lt 1 lc rgb "red", 'ciao.2.2' u (3.-\$1):(\$2-ef) w l lw 3 lt 4 lc rgb "black", 'ciao.2.3' u (3.-\$1):(\$2-ef) w l lw 3 lt 1 lc rgb "green", 'ciao.2.4' u (3.-\$1):(\$2-ef) w l lw 3 lt 5 lc rgb "blue"
EOF
$ECHO "  Writing the bands on file fe.bands.ps...\c"
gnuplot plot.gnu
check_failure $?
$ECHO " done"
fi

$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/Fe.*
$ECHO
$ECHO "$EXAMPLE_DIR: done"
