build:pw:
  tags: [docker]
  image: espressofoundation/ubuntu:latest
  script:
    - ./configure
    - make pw
#    - export OMP_NUM_THREADS=1
#    - cd test-suite
#    - mkdir /tmp/save
#    - make run-tests-pw-serial
#    - rm -r /tmp/save

build:cp:
  tags: [docker]
  image: espressofoundation/ubuntu:latest
  script:
    - ./configure
    - make cp
#    - export OMP_NUM_THREADS=1
#    - cd test-suite
#    - mkdir /tmp/save
#    - make run-tests-cp-serial
#    - rm -r /tmp/save

#build:ph:
#  tags: [docker]
#  image: espressofoundation/ubuntu:latest
#  script:
#    - ./configure
#    - make ph
#    - export OMP_NUM_THREADS=1
#    - cd test-suite
#    - mkdir /tmp/save
#    - make run-tests-ph-serial
#    - rm -r /tmp/save

build:cmake-gnu:
  tags: [docker]
  image: ubuntu:20.04
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  script:
    - apt-get -qq update
    - apt-get -qq install apt-transport-https ca-certificates gnupg software-properties-common wget
    - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
    - apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
    - apt-get install -qq build-essential git cmake libopenblas-dev libfftw3-dev libopenmpi-dev
    - cmake --version
    - mkdir build
    - cd build
    - cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_Fortran_COMPILER=mpif90 -DCMAKE_C_COMPILER=mpicc
            -DMPIEXEC_PREFLAGS="--allow-run-as-root;--oversubscribe" .. && make
      && make pw ph hp pwcond neb pp pwall cp tddfpt gwl ld1 upf xspectra couple epw all_currents
      && ctest -L unit --output-on-failure

build:pgi:
  tags: [docker]
  image: nvcr.io/nvidia/nvhpc:20.9-devel-centos7
  script:
    - ./configure FC=pgf90 F90=pgf90 F77=pgfortran MPIF90=mpif90 --enable-openmp --with-cuda=yes --enable-cuda-env-check=no
    - make pw cp ph

build:cmake-nvhpc:
  tags: [docker]
  image: nvcr.io/nvidia/nvhpc:21.2-devel-cuda11.2-ubuntu20.04
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  script:
    - apt-get -qq update
    - apt-get -qq install apt-transport-https ca-certificates gnupg software-properties-common wget
    - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
    - apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
    - apt-get install -qq git cmake libfftw3-dev
    - cmake --version
    - mkdir build
    - cd build
    - cmake -DBUILD_SHARED_LIBS=OFF -DCMAKE_Fortran_COMPILER=mpif90 -DCMAKE_C_COMPILER=mpicc
            -DQE_ENABLE_CUDA=ON -DQE_ENABLE_OPENACC=ON -DNVFORTRAN_CUDA_CC=70 .. && make

build:cmake-nvhpc-nocuda:
  tags: [docker]
  image: nvcr.io/nvidia/nvhpc:21.2-devel-cuda11.2-ubuntu20.04
  variables:
    DEBIAN_FRONTEND: "noninteractive"
  script:
    - apt-get -qq update
    - apt-get -qq install apt-transport-https ca-certificates gnupg software-properties-common wget
    - wget -O - https://apt.kitware.com/keys/kitware-archive-latest.asc 2>/dev/null | gpg --dearmor - | tee /etc/apt/trusted.gpg.d/kitware.gpg >/dev/null
    - apt-add-repository 'deb https://apt.kitware.com/ubuntu/ focal main'
    - apt-get install -qq git cmake libfftw3-dev
    - cmake --version
    - mkdir build
    - cd build
    - cmake -DBUILD_SHARED_LIBS=ON -DCMAKE_Fortran_COMPILER=mpif90 -DCMAKE_C_COMPILER=mpicc
            -DQE_ENABLE_CUDA=OFF -DQE_ENABLE_OPENACC=OFF .. && make

            
#build:centos:
#  image: centos:latest
#  script:
#    - yum -y groupinstall "Development Tools"
#    - yum -y install wget which python27
#    - ./configure
#    - make all
#    - export OMP_NUM_THREADS=1
#    - cd test-suite
#    - mkdir /tmp/save
#    - make run-tests-serial
#    - rm -r /tmp/save


#### BUILDS ON GALILEO ####

#build:intel:
#  tags: [galileo]
#  script:
#    - module load intel/pe-xe-2017--binary intelmpi/2017--binary mkl/2017--binary
#    - ./configure --enable-openmp
#    - make pw cp
#    - export OMP_NUM_THREADS=2
#    - cd test-suite
#    - mkdir -p /tmp/save
#    - make run-tests-pw-parallel
#    - make run-tests-cp-parallel
#    - rm -r /tmp/save
