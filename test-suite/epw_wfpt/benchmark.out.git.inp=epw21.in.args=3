                                                                                      
                                       ``:oss/                                        
                           `.+s+.     .+ys--yh+     `./ss+.                           
                          -sh//yy+`   +yy   +yy    -+h+-oyy                           
                          -yh- .oyy/.-sh.   .syo-.:sy-  /yh                           
                 `.-.`    `yh+   -oyyyo.     `/syys:    oys      `.`                  
               `/+ssys+-` `sh+      `                   oys`   .:osyo`                
               -yh- ./syyooyo`                          .sys+/oyo--yh/                
               `yy+    .-:-.                             `-/+/:`  -sh-                
                /yh.                                              oys                 
          ``..---hho---------`   .---------..`      `.-----.`    -hd+---.             
       `./osmNMMMMMMMMMMMMMMMs. +NNMMMMMMMMNNmh+.   yNMMMMMNm-  oNMMMMMNmo++:`        
       +sy--/sdMMMhyyyyyyyNMMh- .oyNMMmyyyyyhNMMm+` -yMMMdyyo:` .oyyNMMNhs+syy`       
       -yy/   /MMM+.`-+/``mMMy-   `mMMh:`````.dMMN:` `MMMy-`-dhhy```mMMy:``+hs        
        -yy+` /MMMo:-mMM+`-oo/.    mMMh:     `dMMN/`  dMMm:`dMMMMy..MMMo-.+yo`        
         .sys`/MMMMNNMMMs-         mMMmyooooymMMNo:   oMMM/sMMMMMM++MMN//oh:          
          `sh+/MMMhyyMMMs- `-`     mMMMMMMMMMNmy+-`   -MMMhMMMsmMMmdMMd/yy+           
    `-/+++oyy-/MMM+.`/hh/.`mNm:`   mMMd+/////:-.`      NMMMMMd/:NMMMMMy:/yyo/:.`      
   +os+//:-..-oMMMo:--:::-/MMMo. .-mMMd+---`           hMMMMN+. oMMMMMo. `-+osyso:`   
   syo     `mNMMMMMNNNNNNNNMMMo.oNNMMMMMNNNN:`         +MMMMs:`  dMMMN/`     ``:syo   
   /yh`     :syyyyyyyyyyyyyyyy+.`+syyyyyyyyo:`         .oyys:`   .oyys:`        +yh   
   -yh-        ````````````````    `````````              ``        ``          oys   
   -+h/------------------------::::::::://////++++++++++++++++++++++///////::::/yd:   
   shdddddddddddddddddddddddddddddhhhhhhhhyyyyyssssssssssssssssyyyyyyyhhhhhhhddddh`   
                                                                                      
 Lee, H., PoncÃ©, S., Bushick, K., Hajinazar, S., Lafuente-Bartolome, J.,Leveillee, J.,
    Lian, C., Lihm, J., Macheda, F., Mori, H., Paudyal, H., Sio, W., Tiwari, S.,      
 Zacharias, M., Zhang, X., Bonini, N., Kioupakis, E., Margine, E.R., and Giustino F., 
                                                     npj Comput Mater 9, 156 (2023)   
                                                                                      

     Program EPW v.5.8.1 starts on 24Mar2024 at  2:16:57 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
         "P. Giannozzi et al., J. Phys.:Condens. Matter 29 465901 (2017);
         "P. Giannozzi et al., J. Chem. Phys. 152 154105 (2020);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on     4 processors

     MPI processes distributed on     1 nodes
     K-points division:     npool     =       4
     312595 MiB available memory on the printing compute node when the environment starts

     Reading input from epw21.in

     No temperature supplied. Setting temps(:) to 300 K.

     Reading xml data from directory:

     ./BAs.save/

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation= PZ
                           (   1   1   0   0   0   0   0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want


     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         451     451    139                 6423     6423    1067

     Using Slab Decomposition

     Reading collected, re-writing distributed wavefunctions

     --                                                                         

     bravais-lattice index     =            2
     lattice parameter (a_0)   =       9.1100  a.u.
     unit-cell volume          =     189.0145 (a.u.)^3
     number of atoms/cell      =            2
     number of atomic types    =            2
     kinetic-energy cut-off    =      40.0000  Ry
     charge density cut-off    =     160.0000  Ry
     Exchange-correlation= PZ
                           (   1   1   0   0   0   0   0)


     celldm(1)=    9.11000  celldm(2)=    0.00000  celldm(3)=    0.00000
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of a_0)
               a(1) = ( -0.5000  0.0000  0.5000 )  
               a(2) = (  0.0000  0.5000  0.5000 )  
               a(3) = ( -0.5000  0.5000  0.0000 )  

     reciprocal axes: (cart. coord. in units 2 pi/a_0)
               b(1) = ( -1.0000 -1.0000  1.0000 )  
               b(2) = (  1.0000  1.0000  1.0000 )  
               b(3) = ( -1.0000  1.0000 -1.0000 )  


     Atoms inside the unit cell: 

   Cartesian axes

     site n.  atom      mass           positions (a_0 units)
        1     B      10.8100   tau( 1) = (   -0.12500    0.12500    0.12500  )
        2     As     74.9220   tau( 2) = (    0.12500   -0.12500   -0.12500  )

     25 Sym.Ops. (with q -> -q+G )


     G cutoff =  336.3543  (   6423 G-vectors)     FFT grid: ( 30, 30, 30)
     number of k points=    8
                       cart. coord. in units 2pi/a_0
        k(    1) = (   0.0000000   0.0000000   0.0000000), wk =   0.2500000
        k(    2) = (  -0.5000000   0.5000000  -0.5000000), wk =   0.2500000
        k(    3) = (   0.5000000   0.5000000   0.5000000), wk =   0.2500000
        k(    4) = (   0.0000000   1.0000000   0.0000000), wk =   0.2500000
        k(    5) = (  -0.5000000  -0.5000000   0.5000000), wk =   0.2500000
        k(    6) = (  -1.0000000   0.0000000   0.0000000), wk =   0.2500000
        k(    7) = (   0.0000000   0.0000000   1.0000000), wk =   0.2500000
        k(    8) = (  -0.5000000   0.5000000   0.5000000), wk =   0.2500000

     PseudoPot. # 1 for B  read from file:
     ../../pseudo/B.pz-vbc.UPF
     MD5 check sum: 57e6d61f6735028425feb5bdf19679fb
     Pseudo is Norm-conserving, Zval =  3.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  157 points,  1 beta functions with: 
                l(1) =   0

     PseudoPot. # 2 for As read from file:
     ../../pseudo/As.pz-bhs.UPF
     MD5 check sum: 2c53d8691f3db84e0fbdf898b12bc293
     Pseudo is Norm-conserving, Zval =  5.0
     Generated by new atomic code, or converted to UPF format
     Using radial grid of  525 points,  2 beta functions with: 
                l(1) =   0
                l(2) =   1
     EPW          :      0.18s CPU      0.19s WALL

     EPW          :      0.18s CPU      0.19s WALL

     -------------------------------------------------------------------
     Wannierization on  2 x  2 x  2 electronic grid
     -------------------------------------------------------------------

     Spin CASE ( default = unpolarized )

     Initializing Wannier90


     Initial Wannier projections

     (   0.12500   0.12500   0.12500) :  l =  -3 mr =   1
     (   0.12500   0.12500   0.12500) :  l =  -3 mr =   2
     (   0.12500   0.12500   0.12500) :  l =  -3 mr =   3
     (   0.12500   0.12500   0.12500) :  l =  -3 mr =   4
     (  -0.12500  -0.12500  -0.12500) :  l =  -3 mr =   1
     (  -0.12500  -0.12500  -0.12500) :  l =  -3 mr =   2
     (  -0.12500  -0.12500  -0.12500) :  l =  -3 mr =   3
     (  -0.12500  -0.12500  -0.12500) :  l =  -3 mr =   4

      - Number of bands is (  9)
      - Number of total bands is ( 12)
      - Number of excluded bands is (  3)
      - Number of wannier functions is (  8)
      - All guiding functions are given 

  Reading data about k-point neighbours 

      - All neighbours are found 

     AMN
      k points =     8 in    4 pools
            1 of    2 on ionode
            2 of    2 on ionode

     AMN calculated

     MMN
      k points =     8 in    4 pools
            1 of    2 on ionode
            2 of    2 on ionode
     MMN calculated

     Running Wannier90

     Wannier Function centers (cartesian, alat) and spreads (ang):

     (  -0.07535   0.17465   0.17465) :   1.02556
     (  -0.07535   0.07535   0.07535) :   1.02556
     (  -0.17465   0.17465   0.07535) :   1.02556
     (  -0.17465   0.07535   0.17465) :   1.02556
     (   0.22026  -0.02974  -0.02974) :   0.92973
     (   0.22026  -0.22026  -0.22026) :   0.92973
     (   0.02974  -0.02974  -0.22026) :   0.92973
     (   0.02974  -0.22026  -0.02974) :   0.92973

     -------------------------------------------------------------------
     WANNIER      :      0.46s CPU      0.48s WALL (       1 calls)
     -------------------------------------------------------------------

     Dipole matrix elements calculated


     Calculating kgmap

     Progress kgmap: ########################################
     kmaps        :      0.01s CPU      0.02s WALL (       1 calls)
     Symmetries of Bravais lattice:  48
     Symmetries of crystal:          24

     Reading interatomic force constants

     Read Z* and epsilon
     IFC last   -0.0054915
      Imposed simple ASR

     Finished reading ifcs

     Compute wavefunction overlap <psi(Sk)|S|psi(k)>
     Computing dmat, ik =        1
     Computing dmat, ik =        2


     ===================================================================
     irreducible q point #    1
     ===================================================================

     Symmetries of small group of q: 24
          in addition sym. q -> -q+G:

     Number of q in the star =    1
     List of q in the star:
          1   0.000000000   0.000000000   0.000000000
     Imposing acoustic sum rule on the dynamical matrix
     Read dielectric tensor and effective charges
     Dyn mat calculated from ifcs

        q(    1 ) = (   0.0000000   0.0000000   0.0000000 )


     ===================================================================
     irreducible q point #    2
     ===================================================================

     Symmetries of small group of q:  6
          in addition sym. q -> -q+G:

     Number of q in the star =    4
     List of q in the star:
          1   0.500000000  -0.500000000   0.500000000
          2  -0.500000000   0.500000000   0.500000000
          3   0.500000000   0.500000000  -0.500000000
          4  -0.500000000  -0.500000000  -0.500000000
     Dyn mat calculated from ifcs
     Message from routine init_vloc:
     Interpolation table for Vloc re-allocated

        q(    2 ) = (   0.5000000  -0.5000000   0.5000000 )
        q(    3 ) = (  -0.5000000   0.5000000   0.5000000 )
        q(    4 ) = (   0.5000000   0.5000000  -0.5000000 )
        q(    5 ) = (  -0.5000000  -0.5000000  -0.5000000 )


     ===================================================================
     irreducible q point #    3
     ===================================================================

     Symmetries of small group of q:  8
          in addition sym. q -> -q+G:

     Number of q in the star =    3
     List of q in the star:
          1   0.000000000  -1.000000000   0.000000000
          2   0.000000000   0.000000000  -1.000000000
          3  -1.000000000   0.000000000   0.000000000
     Dyn mat calculated from ifcs

        q(    6 ) = (   0.0000000  -1.0000000   0.0000000 )
        q(    7 ) = (   0.0000000   0.0000000  -1.0000000 )
        q(    8 ) = (  -1.0000000   0.0000000   0.0000000 )

     Writing epmatq on .epb files


     The .epb files have been correctly written


     Band disentanglement is used: nbndsub =    8

     Computes the analytic long-range interaction for polar materials [lpolar]
      
     Construct the Wigner-Seitz cell using Wannier centers and atomic positions 
     Number of WS vectors for electrons       25
     Number of WS vectors for phonons       25
     Number of WS vectors for electron-phonon       25
     Maximum number of cores for efficient parallelization       50

     Inside velocity step 1
 

     Velocity matrix elements calculated
 
 
     Bloch2wane:          1 /          8
     Bloch2wane:          2 /          8
     Bloch2wane:          3 /          8
     Bloch2wane:          4 /          8
     Bloch2wane:          5 /          8
     Bloch2wane:          6 /          8
     Bloch2wane:          7 /          8
     Bloch2wane:          8 /          8

     Writing Hamiltonian, Dynamical matrix and EP vertex in Wann rep to file

     ===================================================================
     Memory usage:  VmHWM =       180Mb
                   VmPeak =       888Mb
     ===================================================================
     
     Using uniform q-mesh:     1    1    1
     Size of q point mesh for interpolation:          1
     Using uniform k-mesh:     1    1    1
     Size of k point mesh for interpolation:          2
     Max number of k points per pool:                2

     Fermi energy coarse grid =   8.071856 eV

     Fermi energy is calculated from the fine k-mesh: Ef =  10.562076 eV

     Warning: check if difference with Fermi level fine grid makes sense

     ===================================================================

              ibndmin =     1  ebndmin =    -7.012 eV
              ibndmax =     8  ebndmax =    12.858 eV


     Number of ep-matrix elements per pool :          384 ~=    3.00 Kb (@ 8 bytes/ DP)
      
     A selecq.fmt file was found but re-created because selecqread == .FALSE. 
     We only need to compute        1 q-points
      
     ===================================================================
     Memory usage:  VmHWM =       180Mb
                   VmPeak =       888Mb
     ===================================================================


     Unfolding on the coarse grid
     elphon_wrap  :      0.59s CPU      0.67s WALL (       1 calls)

     INITIALIZATION: 

     init_vloc    :      0.01s CPU      0.01s WALL (       1 calls)
     init_us_1    :      0.00s CPU      0.00s WALL (       1 calls)



     Electron-Phonon interpolation
     ephwann      :      0.08s CPU      0.26s WALL (       1 calls)
     ep-interp    :      0.00s CPU      0.00s WALL (       1 calls)

     Ham: step 1  :      0.00s CPU      0.00s WALL (       1 calls)
     Ham: step 2  :      0.00s CPU      0.00s WALL (       1 calls)
     ep: step 1   :      0.00s CPU      0.00s WALL (       9 calls)
     ep: step 2   :      0.00s CPU      0.00s WALL (       9 calls)
     unfold_sthma :      0.01s CPU      0.08s WALL (       5 calls)
     dg: step 1   :      0.00s CPU      0.00s WALL (      48 calls)
     dg: step 2   :      0.01s CPU      0.03s WALL (      48 calls)
     sth: step 1  :      0.00s CPU      0.00s WALL (     288 calls)
     sth: step 2  :      0.02s CPU      0.15s WALL (     288 calls)
     wigner_seitz :      0.01s CPU      0.01s WALL (       1 calls)
     DynW2B       :      0.00s CPU      0.00s WALL (       1 calls)
     HamW2B       :      0.00s CPU      0.00s WALL (       6 calls)
     ephW2Bp      :      0.00s CPU      0.00s WALL (       2 calls)
     ephW2B       :      0.00s CPU      0.00s WALL (       2 calls)
     vmeW2B       :      0.00s CPU      0.00s WALL (       2 calls)
     rgd_blk_fine :      0.00s CPU      0.00s WALL (       2 calls)


     Total program execution
     EPW          :      1.31s CPU      1.60s WALL

     % Copyright (C) 2016-2023 EPW-Collaboration                                    
                                                                                    
     ===============================================================================
     Please consider citing the following papers.                                   
                                                                                                 
     % Paper describing the method on which EPW relies                                           
       F. Giustino and M. L. Cohen and S. G. Louie, Phys. Rev. B 76, 165108 (2007)               
                                                                                                 
     % Papers describing the EPW software                                                        
       H. Lee et al., npj Comput. Mater. 9, 156 (2023)                                           
       S. Ponc\'e, E.R. Margine, C. Verdi and F. Giustino, Comput. Phys. Commun. 209, 116 (2016) 
       J. Noffsinger et al., Comput. Phys. Commun. 181, 2140 (2010)                              
                                                                                                 
                                                                                             
     % Since you used the [lpolar] input, please consider also citing                        
       C. Verdi and F. Giustino, Phys. Rev. Lett. 115, 176401 (2015)                         
                                                                                             
     % Since you used the [wfpt] input, please consider also citing                          
       J.-M. Lihm and C.-H. Park, PRX 11, 041053 (2021)                                      
                                                                                    
     For your convenience, this information is also reported in the                 
     functionality-dependent EPW.bib file.                                          
     ===============================================================================
                                                                                    
