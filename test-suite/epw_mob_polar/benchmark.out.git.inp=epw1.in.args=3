                                                                                      
                                       ``:oss/                                        
                           `.+s+.     .+ys--yh+     `./ss+.                           
                          -sh//yy+`   +yy   +yy    -+h+-oyy                           
                          -yh- .oyy/.-sh.   .syo-.:sy-  /yh                           
                 `.-.`    `yh+   -oyyyo.     `/syys:    oys      `.`                  
               `/+ssys+-` `sh+      `                   oys`   .:osyo`                
               -yh- ./syyooyo`                          .sys+/oyo--yh/                
               `yy+    .-:-.                             `-/+/:`  -sh-                
                /yh.                                              oys                 
          ``..---hho---------`   .---------..`      `.-----.`    -hd+---.             
       `./osmNMMMMMMMMMMMMMMMs. +NNMMMMMMMMNNmh+.   yNMMMMMNm-  oNMMMMMNmo++:`        
       +sy--/sdMMMhyyyyyyyNMMh- .oyNMMmyyyyyhNMMm+` -yMMMdyyo:` .oyyNMMNhs+syy`       
       -yy/   /MMM+.`-+/``mMMy-   `mMMh:`````.dMMN:` `MMMy-`-dhhy```mMMy:``+hs        
        -yy+` /MMMo:-mMM+`-oo/.    mMMh:     `dMMN/`  dMMm:`dMMMMy..MMMo-.+yo`        
         .sys`/MMMMNNMMMs-         mMMmyooooymMMNo:   oMMM/sMMMMMM++MMN//oh:          
          `sh+/MMMhyyMMMs- `-`     mMMMMMMMMMNmy+-`   -MMMhMMMsmMMmdMMd/yy+           
    `-/+++oyy-/MMM+.`/hh/.`mNm:`   mMMd+/////:-.`      NMMMMMd/:NMMMMMy:/yyo/:.`      
   +os+//:-..-oMMMo:--:::-/MMMo. .-mMMd+---`           hMMMMN+. oMMMMMo. `-+osyso:`   
   syo     `mNMMMMMNNNNNNNNMMMo.oNNMMMMMNNNN:`         +MMMMs:`  dMMMN/`     ``:syo   
   /yh`     :syyyyyyyyyyyyyyyy+.`+syyyyyyyyo:`         .oyys:`   .oyys:`        +yh   
   -yh-        ````````````````    `````````              ``        ``          oys   
   -+h/------------------------::::::::://////++++++++++++++++++++++///////::::/yd:   
   shdddddddddddddddddddddddddddddhhhhhhhhyyyyyssssssssssssssssyyyyyyyhhhhhhhddddh`   
                                                                                      
 Lee, H., PoncÃ©, S., Bushick, K., Hajinazar, S., Lafuente-Bartolome, J.,Leveillee, J.,
    Lian, C., Lihm, J., Macheda, F., Mori, H., Paudyal, H., Sio, W., Tiwari, S.,      
 Zacharias, M., Zhang, X., Bonini, N., Kioupakis, E., Margine, E.R., and Giustino F., 
                                                     npj Comput Mater 9, 156 (2023)   
                                                                                      

     Program EPW v.5.8 starts on  9Jan2024 at 13:43:11 

     This program is part of the open-source Quantum ESPRESSO suite
     for quantum simulation of materials; please cite
         "P. Giannozzi et al., J. Phys.:Condens. Matter 21 395502 (2009);
         "P. Giannozzi et al., J. Phys.:Condens. Matter 29 465901 (2017);
         "P. Giannozzi et al., J. Chem. Phys. 152 154105 (2020);
          URL http://www.quantum-espresso.org", 
     in publications or presentations arising from this work. More details at
     http://www.quantum-espresso.org/quote

     Parallel version (MPI), running on     4 processors

     MPI processes distributed on     1 nodes
     K-points division:     npool     =       4
     35040 MiB available memory on the printing compute node when the environment starts
 
     Reading input from epw1.in

     WARNING: The specified dis_win_min is ignored.
              You should instead use bands_skipped = 'exclude_bands = ...'
              to control the lower bound of band manifold.

     Reading supplied temperature list.

     Reading xml data from directory:

     ./gan.save/

     IMPORTANT: XC functional enforced from input :
     Exchange-correlation= PZ
                           (   1   1   0   0   0   0   0)
     Any further DFT definition will be discarded
     Please, verify this is what you really want

 
     G-vector sticks info
     --------------------
     sticks:   dense  smooth     PW     G-vecs:    dense   smooth      PW
     Sum         385     385    139                10179    10179    2069
 
     Using Slab Decomposition
 

     Check: negative core charge=   -0.000043
     Reading collected, re-writing distributed wavefunctions

     --                                                                         

     bravais-lattice index     =            4
     lattice parameter (a_0)   =       5.9612  a.u.
     unit-cell volume          =     299.0148 (a.u.)^3
     number of atoms/cell      =            4
     number of atomic types    =            2
     kinetic-energy cut-off    =      40.0000  Ry
     charge density cut-off    =     160.0000  Ry
     Exchange-correlation= PZ
                           (   1   1   0   0   0   0   0)


     celldm(1)=    5.96120  celldm(2)=    0.00000  celldm(3)=    1.62990
     celldm(4)=    0.00000  celldm(5)=    0.00000  celldm(6)=    0.00000

     crystal axes: (cart. coord. in units of a_0)
               a(1) = (  1.0000  0.0000  0.0000 )  
               a(2) = ( -0.5000  0.8660  0.0000 )  
               a(3) = (  0.0000  0.0000  1.6299 )  

     reciprocal axes: (cart. coord. in units 2 pi/a_0)
               b(1) = (  1.0000  0.5774  0.0000 )  
               b(2) = (  0.0000  1.1547  0.0000 )  
               b(3) = (  0.0000  0.0000  0.6135 )  


     Atoms inside the unit cell: 

   Cartesian axes

     site n.  atom      mass           positions (a_0 units)
        1     Ga     69.7230   tau( 1) = (    0.50000    0.28868    0.00000  )
        2     N      14.0070   tau( 2) = (    0.50000    0.28868    0.61359  )
        3     Ga     69.7230   tau( 3) = (   -0.00000    0.57735    0.81495  )
        4     N      14.0070   tau( 4) = (   -0.00000    0.57735    1.42854  )
 
     13 Sym.Ops. (with q -> -q+G )


     G cutoff =  144.0216  (  10179 G-vectors)     FFT grid: ( 25, 25, 40)
     number of k points=    8
                       cart. coord. in units 2pi/a_0
        k(    1) = (   0.0000000   0.0000000   0.0000000), wk =   0.2500000
        k(    2) = (   0.0000000   0.0000000   0.3067673), wk =   0.2500000
        k(    3) = (   0.0000000   0.5773503   0.0000000), wk =   0.2500000
        k(    4) = (   0.0000000   0.5773503   0.3067673), wk =   0.2500000
        k(    5) = (   0.5000000   0.2886751   0.0000000), wk =   0.2500000
        k(    6) = (   0.5000000   0.2886751   0.3067673), wk =   0.2500000
        k(    7) = (   0.5000000   0.8660254   0.0000000), wk =   0.2500000
        k(    8) = (   0.5000000   0.8660254   0.3067673), wk =   0.2500000

     PseudoPot. # 1 for Ga read from file:
     ./Ga-LDA.upf
     MD5 check sum: 876592653117dae7654c8939816812b6
     Pseudo is Norm-conserving + core correction, Zval = 13.0
     Generated using ONCVPSP code by D. R. Hamann
     Using radial grid of 1858 points,  6 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   1
                l(4) =   1
                l(5) =   2
                l(6) =   2

     PseudoPot. # 2 for N  read from file:
     ./N-LDA.upf
     MD5 check sum: 866fc8d98626a2fc4e4cda8444e99222
     Pseudo is Norm-conserving + core correction, Zval =  5.0
     Generated using ONCVPSP code by D. R. Hamann
     Using radial grid of 1058 points,  4 beta functions with: 
                l(1) =   0
                l(2) =   0
                l(3) =   1
                l(4) =   1
     EPW          :      0.29s CPU      0.30s WALL

     EPW          :      0.29s CPU      0.30s WALL

     -------------------------------------------------------------------
     Wannierization on  2 x  2 x  2 electronic grid
     -------------------------------------------------------------------
 
     Spin CASE ( default = unpolarized )
 
     Initializing Wannier90
 
 
     Initial Wannier projections
 
     (   0.66667   0.33333   0.00000) :  l =  -3 mr =   1
     (   0.66667   0.33333   0.00000) :  l =  -3 mr =   2
     (   0.66667   0.33333   0.00000) :  l =  -3 mr =   3
     (   0.66667   0.33333   0.00000) :  l =  -3 mr =   4
     (   0.33333   0.66667   0.50000) :  l =  -3 mr =   1
     (   0.33333   0.66667   0.50000) :  l =  -3 mr =   2
     (   0.33333   0.66667   0.50000) :  l =  -3 mr =   3
     (   0.33333   0.66667   0.50000) :  l =  -3 mr =   4
     (   0.66667   0.33333   0.37646) :  l =   1 mr =   1
     (   0.66667   0.33333   0.37646) :  l =   1 mr =   2
     (   0.66667   0.33333   0.37646) :  l =   1 mr =   3
     (   0.33333   0.66667   0.87646) :  l =   1 mr =   1
     (   0.33333   0.66667   0.87646) :  l =   1 mr =   2
     (   0.33333   0.66667   0.87646) :  l =   1 mr =   3

      - Number of bands is ( 18)
      - Number of total bands is ( 30)
      - Number of excluded bands is ( 12)
      - Number of wannier functions is ( 14)
      - All guiding functions are given 
 
  Reading data about k-point neighbours 
 
      - All neighbours are found 
 
     AMN
      k points =     8 in    4 pools
            1 of    2 on ionode
            2 of    2 on ionode
 
     AMN calculated
 
     MMN
      k points =     8 in    4 pools
            1 of    2 on ionode
            2 of    2 on ionode
     MMN calculated
 
     Running Wannier90
 
     Wannier Function centers (cartesian, alat) and spreads (ang):
 
     (   0.50000   0.53838   0.10578) :   1.25690
     (   0.71623   0.16380   0.10577) :   1.25685
     (   0.50000   0.28859  -0.28544) :   1.39651
     (   0.28377   0.16380   0.10577) :   1.25687
     (   0.21623   0.70223   0.92072) :   1.25687
     (   0.00000   0.57743   0.52951) :   1.39651
     (  -0.21623   0.70223   0.92072) :   1.25685
     (   0.00000   0.32765   0.92073) :   1.25690
     (   0.50000   0.28852   0.61652) :   0.80082
     (   0.50000   0.27872   0.61750) :   0.71643
     (   0.50000   0.29988   0.61751) :   0.71640
     (  -0.00000   0.57751   1.43147) :   0.80082
     (   0.00000   0.58730   1.43245) :   0.71643
     (  -0.00000   0.56614   1.43246) :   0.71640
 
     -------------------------------------------------------------------
     WANNIER      :      1.49s CPU      1.58s WALL (       1 calls)
     -------------------------------------------------------------------

     Calculating kgmap

     Progress kgmap: ########################################
     kmaps        :      0.04s CPU      0.04s WALL (       1 calls)
     Symmetries of Bravais lattice:  24
     Symmetries of crystal:          12


     ===================================================================
     irreducible q point #    1
     ===================================================================

     Symmetries of small group of q: 12
          in addition sym. q -> -q+G:
 
     Number of q in the star =    1
     List of q in the star:
          1   0.000000000   0.000000000   0.000000000
     Imposing acoustic sum rule on the dynamical matrix
     Read dielectric tensor and effective charges
 
        q(    1 ) = (   0.0000000   0.0000000   0.0000000 )


     ===================================================================
     irreducible q point #    2
     ===================================================================

     Symmetries of small group of q: 12
          in addition sym. q -> -q+G:
 
     Number of q in the star =    1
     List of q in the star:
          1   0.000000000   0.000000000  -0.306767286
     Message from routine init_vloc:
     Interpolation table for Vloc re-allocated
 
        q(    2 ) = (   0.0000000   0.0000000  -0.3067673 )


     ===================================================================
     irreducible q point #    3
     ===================================================================

     Symmetries of small group of q:  4
          in addition sym. q -> -q+G:
 
     Number of q in the star =    3
     List of q in the star:
          1   0.000000000  -0.577350269   0.000000000
          2   0.500000000   0.288675135   0.000000000
          3  -0.500000000   0.288675135   0.000000000
 
        q(    3 ) = (   0.0000000  -0.5773503   0.0000000 )
        q(    4 ) = (   0.5000000   0.2886751   0.0000000 )
        q(    5 ) = (  -0.5000000   0.2886751   0.0000000 )


     ===================================================================
     irreducible q point #    4
     ===================================================================

     Symmetries of small group of q:  4
          in addition sym. q -> -q+G:
 
     Number of q in the star =    3
     List of q in the star:
          1   0.000000000  -0.577350269  -0.306767286
          2   0.500000000   0.288675135  -0.306767286
          3  -0.500000000   0.288675135  -0.306767286
 
        q(    6 ) = (   0.0000000  -0.5773503  -0.3067673 )
        q(    7 ) = (   0.5000000   0.2886751  -0.3067673 )
        q(    8 ) = (  -0.5000000   0.2886751  -0.3067673 )

     Writing epmatq on .epb files


     The .epb files have been correctly written


     Band disentanglement is used: nbndsub =   14

     Computes the analytic long-range interaction for polar materials [lpolar]
      
     Construct the Wigner-Seitz cell using Wannier centers and atomic positions 
     Number of WS vectors for electrons       35
     Number of WS vectors for phonons       25
     Number of WS vectors for electron-phonon       29
     Maximum number of cores for efficient parallelization      116

     Inside velocity step 1
 

     Velocity matrix elements calculated
 
 
     Bloch2wane:          1 /          8
     Bloch2wane:          2 /          8
     Bloch2wane:          3 /          8
     Bloch2wane:          4 /          8
     Bloch2wane:          5 /          8
     Bloch2wane:          6 /          8
     Bloch2wane:          7 /          8
     Bloch2wane:          8 /          8
     Bloch2wanp:          1 /          8
     Bloch2wanp:          2 /          8
     Bloch2wanp:          3 /          8
     Bloch2wanp:          4 /          8
     Bloch2wanp:          5 /          8
     Bloch2wanp:          6 /          8
     Bloch2wanp:          7 /          8
     Bloch2wanp:          8 /          8

     Writing Hamiltonian, Dynamical matrix and EP vertex in Wann rep to file

     ===================================================================
     Memory usage:  VmHWM =        79Mb
                   VmPeak =      3802Mb
     ===================================================================
     
     Using q-mesh file: ./MGA.txt
     Size of q point mesh for interpolation:        178
     Using k-mesh file: ./MGA.txt
     Size of k point mesh for interpolation:        356
     Max number of k points per pool:               90

     Fermi energy coarse grid =  11.381868 eV

     ===================================================================

     Fermi energy is read from the input file: Ef =  11.800000 eV

     ===================================================================

     Skipping the first   12 bands:

     The Fermi level will be determined with  12.00000 electrons

              ibndmin =     1  ebndmin =     3.617 eV
              ibndmax =    14  ebndmax =    25.290 eV


     Number of ep-matrix elements per pool :       105840 ~=  826.88 Kb (@ 8 bytes/ DP)
     Number selected, total         100         100
     We only need to compute      178 q-points
      
     Progression iq (fine) =        100/       178
     ===================================================================
     Memory usage:  VmHWM =        80Mb
                   VmPeak =      3802Mb
     ===================================================================


     Unfolding on the coarse grid
     elphon_wrap  :      4.51s CPU      4.65s WALL (       1 calls)

     INITIALIZATION: 

     set_drhoc    :      0.04s CPU      0.04s WALL (       9 calls)
     init_vloc    :      0.06s CPU      0.06s WALL (       1 calls)
     init_us_1    :      0.02s CPU      0.02s WALL (       1 calls)



     Electron-Phonon interpolation
     ephwann      :     14.77s CPU     15.18s WALL (       1 calls)
     ep-interp    :     13.35s CPU     13.72s WALL (     178 calls)

     Ham: step 1  :      0.00s CPU      0.00s WALL (       1 calls)
     Ham: step 2  :      0.00s CPU      0.00s WALL (       1 calls)
     ep: step 1   :      0.00s CPU      0.00s WALL (       8 calls)
     ep: step 2   :      0.01s CPU      0.01s WALL (       8 calls)
     DynW2B       :      0.30s CPU      0.30s WALL (     178 calls)
     HamW2B       :      1.03s CPU      1.04s WALL (   16333 calls)
     ephW2Bp      :      1.58s CPU      1.85s WALL (     178 calls)
     ephW2B       :      7.36s CPU      7.44s WALL (    8010 calls)
     vmewan2bloch :      1.88s CPU      1.90s WALL (   16020 calls)
     vmewan2bloch :      1.88s CPU      1.90s WALL (   16020 calls)


     Total program execution
     EPW          :     21.05s CPU     21.71s WALL

     % Copyright (C) 2016-2023 EPW-Collaboration                                    
                                                                                    
     ===============================================================================
     Please consider citing the following papers.                                   
                                                                                                 
     % Paper describing the method on which EPW relies                                           
       F. Giustino and M. L. Cohen and S. G. Louie, Phys. Rev. B 76, 165108 (2007)               
                                                                                                 
     % Papers describing the EPW software                                                        
       H. Lee et al., npj Comput. Mater. 9, 156 (2023)                                           
       S. Ponc\'e, E.R. Margine, C. Verdi and F. Giustino, Comput. Phys. Commun. 209, 116 (2016) 
       J. Noffsinger et al., Comput. Phys. Commun. 181, 2140 (2010)                              
                                                                                                 
                                                                                             
     % Since you used the [lpolar] input, please consider also citing                        
       C. Verdi and F. Giustino, Phys. Rev. Lett. 115, 176401 (2015)                         
                                                                                    
     For your convenience, this information is also reported in the                 
     functionality-dependent EPW.bib file.                                          
     ===============================================================================
                                                                                    
