#!/bin/sh

###############################################################################
##
##  HIGH VERBOSITY EXAMPLE
##
###############################################################################

# run from directory where this script is
cd `dirname $0`
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example tests ph.x with PAW"
$ECHO "It calculates the phonon modes of C at the gamma and X points"
$ECHO "and the vibrational modes of a molecule (CH4) at Gamma."
$ECHO

# set the needed environment variables
. ../../../environment_variables

# required executables and pseudopotentials
BIN_LIST="pw.x ph.x"
PSEUDO_LIST="H.pz-kjpaw.UPF C.pz-kjpaw.UPF Cu.pbe-kjpaw.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE $NETWORK_PSEUDO/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
PH_COMMAND="$PARA_PREFIX $BIN_DIR/ph.x $PARA_POSTFIX"
$ECHO
$ECHO "  running pw.x     as: $PW_COMMAND"
$ECHO "  running ph.x     as: $PH_COMMAND"
$ECHO

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/carbon*
rm -rf $TMP_DIR/_ph0/carbon*
$ECHO " done"

# self-consistent calculation for C with PAW-PP
cat > c.scf.in << EOF
 &control
    calculation='scf',
    restart_mode='from_scratch',
    prefix='carbon',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav = 2, celldm(1) =6.68, nat=  2, ntyp= 1,
    nr1=32,
    nr2=32,
    nr3=32,
    ecutwfc = 27.0
    ecutrho = 300.0
 /
 &electrons
    mixing_beta = 0.7
    conv_thr =  1.0d-9
 /
ATOMIC_SPECIES
 C   0.0  C.pz-kjpaw.UPF
ATOMIC_POSITIONS (alat)
 C  0.00 0.00 0.00
 C  0.25 0.25 0.25
K_POINTS AUTOMATIC
4 4 4 1 1 1
EOF
$ECHO "  running the scf calculation for C...\c"
$PW_COMMAND < c.scf.in > c.scf.out
check_failure $?
$ECHO " done"

# phonon calculation at G
cat > c.phG.in << EOF
phonons of C at Gamma
 &inputph
  tr2_ph=1.0d-14,
  epsil=.true.,
  zue=.true.
  prefix='carbon',
  fildyn='Cg.dyn',
  outdir='$TMP_DIR/'
 /
0.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation for C at Gamma...\c"
$PH_COMMAND < c.phG.in > c.phG.out
check_failure $?
$ECHO " done"

# phonon calculation at X
cat > c.phX.in << EOF
phonons of C at X
 &inputph
  tr2_ph=1.0d-14,
  prefix='carbon',
  fildyn='CX.dyn',
  outdir='$TMP_DIR/'
 /
1.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation for C at X...\c"
$PH_COMMAND < c.phX.in > c.phX.out
check_failure $?
$ECHO " done"

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/copper*
rm -rf $TMP_DIR/_ph0/copper*
$ECHO " done"

# self-consistent calculation for Cu PBE with PAW-PP
cat > Cu.scf_pbe.in << EOF
 &control
    calculation='scf',
    restart_mode='from_scratch',
    prefix='copper',
    pseudo_dir = '$PSEUDO_DIR/',
    outdir='$TMP_DIR/'
 /
 &system
    ibrav = 2, celldm(1) =6.90, nat=  1, ntyp= 1,
    occupations='smearing',
    smearing='mv',
    degauss=0.01,
    ecutwfc = 30.0
    ecutrho = 700.0
 /
 &electrons
    mixing_beta = 0.7
    conv_thr =  1.0d-9
 /
ATOMIC_SPECIES
Cu   0.0  Cu.pbe-kjpaw.UPF
ATOMIC_POSITIONS (alat)
 Cu  0.00 0.00 0.00
K_POINTS AUTOMATIC
4 4 4 1 1 1
EOF
$ECHO "  running the scf calculation for Cu with GGA-PBE...\c"
$PW_COMMAND < Cu.scf_pbe.in > Cu.scf_pbe.out
check_failure $?
$ECHO " done"

# phonon calculation at G
cat > Cu.phG_pbe.in << EOF
phonons of Cu at Gamma
 &inputph
  tr2_ph=1.0d-14,
  prefix='copper',
  fildyn='Cug.dyn',
  outdir='$TMP_DIR/'
 /
0.0 0.0 0.0
EOF
$ECHO "  running the phonon calculation for Cu at Gamma with GGA-PBE...\c"
$PH_COMMAND < Cu.phG_pbe.in > Cu.phG_pbe.out
check_failure $?
$ECHO " done"

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/ch4*
rm -rf $TMP_DIR/_ph0/ch4*
$ECHO " done"

# Self consistent calculation for CH4
cat > ch4.scf.in << EOF
ch4
ch4 molecule in a cubic box
 &control
    calculation = 'scf',
    restart_mode='from_scratch',
    prefix='ch4',
    tprnfor = .true.,
    pseudo_dir = '$PSEUDO_DIR',
    outdir='$TMP_DIR'
 /
 &system
    ibrav=  1,
    celldm(1) =15.0,
    nat=5,
    ntyp= 2,
    ecutwfc =25.0,
    ecutrho =300.0,
 /
 &electrons
    mixing_beta = 0.5,
    conv_thr =  1.0d-10
 /
ATOMIC_SPECIES
 H  1.0   H.pz-kjpaw.UPF
 C  12.0  C.pz-kjpaw.UPF
ATOMIC_POSITIONS (alat)
H        0.080728893   0.080728893   0.080728893
H       -0.080728893  -0.080728893   0.080728893
H        0.080728893  -0.080728893  -0.080728893
H       -0.080728893   0.080728893  -0.080728893
C        0.000000000   0.000000000   0.000000000
K_POINTS
1
0.0 0.0 0.0 1.0
EOF
$ECHO "  running the scf calculation for CH4...\c"
$PW_COMMAND < ch4.scf.in > ch4.scf.out
check_failure $?
$ECHO " done"

# normal mode calculation for CH4
cat > ch4.nm.in << EOF
vibrations of ch4
 &inputph
  tr2_ph=4.0d-17,
  prefix='ch4',
  outdir='$TMP_DIR',
  amass(1)=1.d0,
  amass(2)=12.d0,
  asr=.true.,
  zue=.true.,
  epsil=.true.,
  trans=.true.,
  fildyn='ch4.dyn',
 /
0.0 0.0 0.0
EOF
$ECHO "  running normal mode calculation for CH4...\c"
$PH_COMMAND < ch4.nm.in > ch4.nm.out
check_failure $?
$ECHO " done"

$ECHO
$ECHO "$EXAMPLE_DIR: done"
