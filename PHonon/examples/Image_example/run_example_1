#!/bin/sh

###############################################################################
##
##  HIGH VERBOSITY EXAMPLE
##
###############################################################################

# run from directory where this script is
cd `dirname $0`
EXAMPLE_DIR=`pwd`

# check whether echo has the -e option
if test "`echo -e`" = "-e" ; then ECHO=echo ; else ECHO="echo -e" ; fi

$ECHO
$ECHO "$EXAMPLE_DIR : starting"
$ECHO
$ECHO "This example shows how to calculate the phonon dispersion of fcc-Al"
$ECHO "point by point using the image parallelization"
$ECHO

# set the needed environment variables
. ../../../environment_variables

# required executables and pseudopotentials
BIN_LIST="pw.x ph.x q2r.x matdyn.x lambda.x"
PSEUDO_LIST="Al.pz-vbc.UPF"

$ECHO
$ECHO "  executables directory: $BIN_DIR"
$ECHO "  pseudo directory:      $PSEUDO_DIR"
$ECHO "  temporary directory:   $TMP_DIR"
$ECHO "  checking that needed directories and files exist...\c"

# check for directories
for DIR in "$BIN_DIR" "$PSEUDO_DIR" ; do
    if test ! -d $DIR ; then
        $ECHO
        $ECHO "ERROR: $DIR not existent or not a directory"
        $ECHO "Aborting"
        exit 1
    fi
done
for DIR in "$TMP_DIR" "$EXAMPLE_DIR/results_1" ; do
    if test ! -d $DIR ; then
        mkdir $DIR
    fi
done
cd $EXAMPLE_DIR/results_1

# check for executables
for FILE in $BIN_LIST ; do
    if test ! -x $BIN_DIR/$FILE ; then
        $ECHO
        $ECHO "ERROR: $BIN_DIR/$FILE not existent or not executable"
        $ECHO "Aborting"
        exit 1
    fi
done

# check for pseudopotentials
for FILE in $PSEUDO_LIST ; do
    if test ! -r $PSEUDO_DIR/$FILE ; then
       $ECHO
       $ECHO "Downloading $FILE to $PSEUDO_DIR...\c"
            $WGET $PSEUDO_DIR/$FILE $NETWORK_PSEUDO/$FILE 2> /dev/null
    fi
    if test $? != 0; then
        $ECHO
        $ECHO "ERROR: $PSEUDO_DIR/$FILE not existent or not readable"
        $ECHO "Aborting"
        exit 1
    fi
done
$ECHO " done"

# how to run executables
PW_COMMAND="$PARA_PREFIX $BIN_DIR/pw.x $PARA_POSTFIX"
PH_COMMAND="$PARA_PREFIX $BIN_DIR/ph.x $PARA_POSTFIX"
PH_IMAGE_COMMAND="$PARA_IMAGE_PREFIX $BIN_DIR/ph.x $PARA_IMAGE_POSTFIX"
MATDYN_COMMAND="$PARA_PREFIX $BIN_DIR/matdyn.x $PARA_POSTFIX"
Q2R_COMMAND="$PARA_PREFIX $BIN_DIR/q2r.x $PARA_POSTFIX"
PLOTBAND_COMMAND="$BIN_DIR/plotband.x"
GP_COMMAND=`which gnuplot 2>/dev/null`
if [ "$GP_COMMAND" = "" ]; then
        $ECHO
        $ECHO "gnuplot not in PATH"
        $ECHO "Results will not be plotted"
fi
$ECHO
$ECHO "  running pw.x as: $PW_COMMAND"
$ECHO "  running ph.x with images as: $PH_IMAGE_COMMAND"
$ECHO "  running ph.x as: $PH_COMMAND"
$ECHO "  running q2r.x as:    $Q2R_COMMAND"
$ECHO "  running matdyn.x as: $MATDYN_COMMAND"
$ECHO "  running plotband.x as: $PLOTBAND_COMMAND"
$ECHO "  running gnuplot as: $GP_COMMAND"
$ECHO

# clean TMP_DIR
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/al*
rm -rf $TMP_DIR/_ph*/al*
$ECHO "  done"
#
#  SCF at k-mesh good enough for phonons
#
cat > al.scf.in << EOF
 &control
   calculation='scf'
   restart_mode='from_scratch',
   prefix='al',
   pseudo_dir = '$PSEUDO_DIR/',
   outdir='$TMP_DIR/'
 /
 &system
    ibrav=  2, celldm(1) =7.5, nat= 1, ntyp= 1,
    ecutwfc =15.0,
    occupations='smearing',
    smearing='mv',
    degauss=0.05
 /
 &electrons
    conv_thr =  1.0d-8
    mixing_beta = 0.7
 /
ATOMIC_SPECIES
 Al  26.98 Al.pz-vbc.UPF
ATOMIC_POSITIONS (alat)
 Al 0.00 0.00 0.00
K_POINTS {automatic}
 8 8 8  0 0 0
EOF
$ECHO "  running the scf calculation...\c"
$PW_COMMAND < al.scf.in > al.scf.out
check_failure $?
$ECHO "  done"
#
# running phonon calculation using images
#
cat > al.ph.disp.in << EOF
Phonon dispersions for Al
 &inputph
  tr2_ph=1.0d-10,
  prefix='al',
  amass(1)=26.98,
  outdir='$TMP_DIR/',
  fildyn='al.disp.dyn',
  ldisp=.true.
  nq1=4, nq2=4, nq3=4,
 /
EOF
$ECHO "  running the ph calculation using images...\c"
$PH_IMAGE_COMMAND < al.ph.disp.in > al.ph.disp.out
check_failure $?
$ECHO "  done"
#
#  Collect the results of the dispersion calculation
#
cat > al.ph.disp.collect.in << EOF
Phonon dispersions for Al
 &inputph
  tr2_ph=1.0d-10,
  prefix='al',
  amass(1)=26.98,
  outdir='$TMP_DIR/',
  fildyn='al.disp.dyn',
  recover=.true.,
  ldisp=.true.
  nq1=4, nq2=4, nq3=4,
 /
EOF
$ECHO "  recovering the results of all images...\c"
$PH_COMMAND < al.ph.disp.collect.in > al.ph.disp.collect.out
check_failure $?
$ECHO "  done"
#
cat > q2r.in << EOF
 &input
  zasr='simple',  fildyn='al.disp.dyn', flfrc='Al444.fc'
 /
EOF
$ECHO "  running q2r...\c"
$Q2R_COMMAND < q2r.in > q2r.out
check_failure $?
$ECHO "  done"
#
cat > matdyn.in <<EOF
 &input
    asr='simple',  amass(1)=26.98,,
    flfrc='Al444.fc', flfrq='al.freq', q_in_band_form=.true.,
 /
 6
  0.000 0.0 0.0   40
  1.0   0.0 0.0   20
  1.0   0.5 0.0   20
  1.0   1.0 0.0   40
  0.00  0.0 0.0   40
  0.5   0.5 0.5    1
EOF

$ECHO "  running matdyn to interpolate the dispersion...\c"
$MATDYN_COMMAND < matdyn.in > matdyn.out
check_failure $?
$ECHO "  done"

cat > plotband_1.in <<EOF
al.freq
0 400
freq.disp.plot
freq.disp.ps
0.0
50.0 0.0
EOF
#
$ECHO "  writing the phonon dispersions in freq.disp.plot...\c"
$PLOTBAND_COMMAND < plotband_1.in > /dev/null
check_failure $?
$ECHO " done"
#
# clean TMP_DIR from the results of previous phonon calculation
#
$ECHO "  cleaning $TMP_DIR...\c"
rm -rf $TMP_DIR/_ph*/*
$ECHO "  done"
#
#  now run the phonon on the q points along the lines using images
#
cat > al.ph.in << EOF
Phonon dispersions for Al
 &inputph
  tr2_ph=1.0d-10,
  prefix='al',
  amass(1)=26.98,
  outdir='$TMP_DIR/',
  fildyn='al.dyn',
  ldisp=.true.
  qplot=.true.,
  q_in_band_form=.true.,
 /
5
0.0 0.0 0.0 4
1.0 0.0 0.0 4
1.0 1.0 0.0 4
0.0 0.0 0.0 4
0.5 0.5 0.5 1
EOF
$ECHO "  running the ph calculation on a set q of points using images...\c"
$PH_IMAGE_COMMAND < al.ph.in > al.ph.out
check_failure $?
$ECHO "  done"
#
#  collect the results of the previous run
#
cat > al.ph.collect.in << EOF
Phonon dispersions for Al
 &inputph
  tr2_ph=1.0d-10,
  prefix='al',
  amass(1)=26.98,
  outdir='$TMP_DIR/',
  fildyn='al.dyn',
  recover=.true.
  ldisp=.true.
  qplot=.true.,
  q_in_band_form=.true.,
 /
5
0.0 0.0 0.0 4
1.0 0.0 0.0 4
1.0 1.0 0.0 4
0.0 0.0 0.0 4
0.5 0.5 0.5 1
EOF
$ECHO "  collecting the ph calculation on a set q of points...\c"
$PH_COMMAND < al.ph.collect.in > al.ph.collect.out
check_failure $?
$ECHO "  done"
#
#
cat > plotband.in <<EOF
al.dyn.freq
0 400
freq.plot
freq.ps
0.0
50.0 0.0
EOF

$ECHO "  writing the frequencies in freq.plot...\c"
$PLOTBAND_COMMAND < plotband.in > /dev/null
check_failure $?
$ECHO " done"

if [ "$GP_COMMAND" = "" ]; then
    break
else
cat > gnuplot.tmp <<EOF
set encoding iso_8859_15
set terminal postscript enhanced solid color "Helvetica" 20
set output "al.dispersions.ps"
#
set key off

set xrange [0:4.280239]
dim=450
set yrange [0:dim]
set arrow from 1,0. to 1,dim nohead  lw 2
set arrow from 2,0. to 2,dim nohead  lw 2
set arrow from 1.5,0. to 1.5,dim nohead  lw 2
set arrow from 3.4142,0. to 3.4142,dim nohead  lw 2
set ylabel "frequency (cm^{-1})"
unset xtics
lpos=-15
set label "{/Symbol G}" at -0.05,lpos
set label "X" at 0.95,lpos
set label "W" at 1.45,lpos
set label "X" at 1.95,lpos
set label "{/Symbol G}" at 3.37,lpos
set label "L" at 4.1897,lpos

plot "freq.disp.plot" u 1:2 w l lw 3
replot "freq.plot" u 1:2 w p pt 56
EOF
$ECHO "  creating the postscript file al.dispersion.ps...\c"
$GP_COMMAND gnuplot.tmp
check_failure $?
$ECHO " done"
fi

$ECHO
$ECHO "$EXAMPLE_DIR: done"
