*** FILE AUTOMATICALLY CREATED: DO NOT EDIT, CHANGES WILL BE LOST ***

------------------------------------------------------------------------
INPUT FILE DESCRIPTION

Program: neb.x / NEB / Quantum Espresso (version: 7.0)
------------------------------------------------------------------------


Input data format: { } = optional, [ ] = it depends, | = or

All quantities whose dimensions are not explicitly specified are in
RYDBERG ATOMIC UNITS

BEWARE: TABS, DOS <CR><LF> CHARACTERS ARE POTENTIAL SOURCES OF TROUBLE

neb.x DOES NOT READ FROM STANDARD INPUT !

There are two ways for running a calculation with neb.x:

(1) specifying a file to parse with the ./neb.x -inp or ./neb.x -input
    command line option.

(2) or specifying the number of copies of PWscf inputs with the ./neb.x -input_images

For case (1) a file containing special KEYWORDS (aka SUPERCARDS) has to be
written (see below). These KEYWORDS tell the parser which part of the file
contains the neb specifics and which part contains the energy/force engine
input (at the moment only PW).  After the parsing, different files are
generated: neb.dat, with the neb specific variables, and a set of pw_*.in
PWscf input files, i.e., one for each input position. All options for a
single SCF calculation apply.

The general structure of the file to be parsed is:
==================================================

BEGIN
  BEGIN_PATH_INPUT
    ... neb specific namelists and cards
  END_PATH_INPUT

  BEGIN_ENGINE_INPUT
    ...pw specific namelists and cards
    BEGIN_POSITIONS
      FIRST_IMAGE
      ...pw ATOMIC_POSITIONS card
      ...pw TOTAL_CHARGE card (only for FCP)
      INTERMEDIATE_IMAGE
      ...pw ATOMIC_POSITIONS card
      ...pw TOTAL_CHARGE card (only for FCP)
      LAST_IMAGE
      ...pw ATOMIC_POSITIONS card
      ...pw TOTAL_CHARGE card (only for FCP)
    END_POSITIONS
    ... other pw specific cards
  END_ENGINE_INPUT
END


For case (2) neb.dat and all pw_1.in, pw_2.in ... should be already present.

Structure of the NEB-only input data (file neb.dat):
====================================================

&PATH
  ...
/

[ CLIMBING_IMAGES
   list of images, separated by a comma ]



########################################################################
| SUPERCARD: BEGIN/END
| this supercard is enclosed within the keywords:
|
| BEGIN
|    ... content of the supercard here ...
| END
|
| The syntax of supercard's content follows below:

   ########################################################################
   | SUPERCARD: BEGIN_PATH_INPUT/END_PATH_INPUT
   | this supercard is enclosed within the keywords:
   |
   | BEGIN_PATH_INPUT
   |    ... content of the supercard here ...
   | END_PATH_INPUT
   |
   | The syntax of supercard's content follows below:
   
      ========================================================================
      NAMELIST: &PATH
      
         +--------------------------------------------------------------------
         Variable:       string_method
         
         Type:           CHARACTER
         Default:        'neb'
         Description:   
                         A string describing the task to be performed. Options are:
          
                         'neb' :
                              nudget-elastic-band
          
                         'smd' :
                              string-method-dynamics
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       restart_mode
         
         Type:           CHARACTER
         Default:        'from_scratch'
         Description:   
                         Options are:
          
                         'from_scratch' :
                              from scratch
          
                         'restart' :
                              from previous interrupted run
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       nstep_path
         
         Type:           INTEGER
         Description:    number of ionic + electronic steps
         Default:        1
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       num_of_images
         
         Type:           INTEGER
         Default:        0
         Description:    Number of points used to discretize the path
                         (it must be larger than 3).
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       opt_scheme
         
         Type:           CHARACTER
         Default:        'quick-min'
         Description:   
                         Specify the type of optimization scheme:
          
                         'sd' :
                              steepest descent
          
                         'broyden' :
                              quasi-Newton Broyden's second method (suggested)
          
                         'broyden2' :
                              another variant of the quasi-Newton Broyden's
                              second method to be tested and compared with the
                              previous one.
          
                         'quick-min' :
                              an optimisation algorithm based on the
                              projected velocity Verlet scheme
          
                         'langevin' :
                              finite temperature langevin dynamics of the
                              string (smd only). It is used to compute the
                              average path and the free-energy profile.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       CI_scheme
         
         Type:           CHARACTER
         Default:        'no-CI'
         Description:   
                         Specify the type of Climbing Image scheme:
          
                         'no-CI' :
                              climbing image is not used
          
                         'auto' :
                              original CI scheme. The image highest in energy
                              does not feel the effect of springs and is
                              allowed to climb along the path
          
                         'manual' :
                              images that have to climb are manually selected.
                              See also "CLIMBING_IMAGES" card
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       first_last_opt
         
         Type:           LOGICAL
         Default:        .FALSE.
         Description:    Also the first and the last configurations are optimized
                         "on the fly" (these images do not feel the effect of the springs).
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       minimum_image
         
         Type:           LOGICAL
         Default:        .FALSE.
         Description:    Assume a "minimum image criterion" to build the path. If an atom
                         moves by more than half the length of a crystal axis between one
                         image and the next in the input (before interpolation),
                         an appropriate periodic replica of that atom is chosen.
                         Useful to avoid jumps in the initial reaction path.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       temp_req
         
         Type:           REAL
         Default:        0.D0 Kelvin
         Description:    Temperature used for the langevin dynamics of the string.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       ds
         
         Type:           REAL
         Default:        1.D0
         Description:    Optimisation step length ( Hartree atomic units ).
                         If "opt_scheme"=="broyden", ds is used as a guess for the
                         diagonal part of the Jacobian matrix.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variables:      k_max, k_min
         
         Type:           REAL
         Default:        0.1D0 Hartree atomic units
         Description:    Set them to use a Variable Elastic Constants scheme
                         elastic constants are in the range [ k_min, k_max ]
                         this is useful to rise the resolution around the saddle point.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       path_thr
         
         Type:           REAL
         Default:        0.05D0 eV / Angstrom
         Description:    The simulation stops when the error ( the norm of the force
                         orthogonal to the path in eV/A ) is less than path_thr.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       use_masses
         
         Type:           LOGICAL
         Default:        .FALSE.
         Description:    If. TRUE. the optimisation of the path is performed using
                         mass-weighted coordinates. Useful together with quick-min
                         optimization scheme, if some bonds are much stiffer than
                         others. By assigning a larger (fictitious) mass to atoms
                         with stiff bonds, one may use a longer time step "ds"
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       use_freezing
         
         Type:           LOGICAL
         Default:        .FALSE.
         Description:    If. TRUE. the images are optimised according to their error:
                         only those images with an error larger than half of the largest
                         are optimised. The other images are kept frozen.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       lfcp
         
         Type:           LOGICAL
         See:            fcp_mu
         Default:        .FALSE.
         Description:    If .TRUE. perform a constant bias potential (constant-mu)
                         calculation with ESM method (assume_isolated = 'esm' and
                         esm_bc = 'bc2' or 'bc3' must be set in SYSTEM namelist).
                         "fcp_mu" gives the target Fermi energy.
                         See the header of PW/src/fcp_module.f90 for documentation
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       fcp_mu
         
         Type:           REAL
         See:            lfcp
         Default:        0.d0
         Description:    If "lfcp" == .TRUE., gives the target Fermi energy [eV].
                         One can specify the total charge of the system for the first
                         and last image by giving "TOTAL_CHARGE" cards
                         so that the Fermi energy of these systems will be the target value,
                         otherwise "first_last_opt" should be .TRUE.
                         For the initial charge of intermediate images, the "TOTAL_CHARGE"
                         is linearly interpolated between the initial and the final ones
                         unless the "TOTAL_CHARGE" is given in the input file.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       fcp_thr
         
         Type:           REAL
         See:            lfcp
         Default:        0.01D0 V
         Description:    The simulation stops when the error ( the maximum of the force
                         acting on the FCP in V ) is less than fcp_thr.
         +--------------------------------------------------------------------
         
         +--------------------------------------------------------------------
         Variable:       fcp_scheme
         
         Type:           CHARACTER
         See:            lfcp
         Default:        'lm'
         Description:   
                         Specify the type of optimization scheme for FCP:
          
                         'lm' :
                              Line-Minimization method.
          
                         'newton' :
                              Newton-Raphson method with diagonal hessian matrix.
                              Also, coupling with DIIS.
          
                         'coupled' :
                              Coupled method with ionic positions.
                              This is available only if "opt_scheme" == 'broyden',
                              or 'broyden2'.
         +--------------------------------------------------------------------
         
      ===END OF NAMELIST======================================================
      
      
      ========================================================================
      CARD: CLIMBING_IMAGES 
      
         OPTIONAL CARD, NEEDED ONLY IF "CI_SCHEME" == 'MANUAL', IGNORED OTHERWISE !
         
         /////////////////////////////////////////
         // Syntax:                             //
         /////////////////////////////////////////
         
            CLIMBING_IMAGES 
               index1, index2, ... indexN
         
         /////////////////////////////////////////
         
         DESCRIPTION OF ITEMS:
         
            +--------------------------------------------------------------------
            Variables:      index1, index2, ... indexN
            
            Type:           INTEGER
            Description:    index1, index2, ..., indexN are indices of the images to which the
                            Climbing-Image procedure apply. If more than one image is specified
                            they must be separated by a comma.
            +--------------------------------------------------------------------
            
            
      ===END OF CARD==========================================================
      
      
   ### END OF SUPERCARD :  BEGIN_PATH_INPUT/END_PATH_INPUT ################
   
   
   ########################################################################
   | SUPERCARD: BEGIN_ENGINE_INPUT/END_ENGINE_INPUT
   | this supercard is enclosed within the keywords:
   |
   | BEGIN_ENGINE_INPUT
   |    ... content of the supercard here ...
   | END_ENGINE_INPUT
   |
   | The syntax of supercard's content follows below:
   
      Here comes the pw.x specific namelists and cards (see file: "" or INPUT_PW.txt)
      with the exception of "ATOMIC_POSITIONS" cards, which are specified separately within the
      "BEGIN_POSITIONS"/END_POSITIONS supercard as described below.
      
      So the input that follows here is of the following structure:
      
         &CONTROL
            ...
         /
         &SYSTEM
           ...
         /
         &ELECTRONS
           ...
         /
         ...
      
      ########################################################################
      | SUPERCARD: BEGIN_POSITIONS/END_POSITIONS
      | this supercard is enclosed within the keywords:
      |
      | BEGIN_POSITIONS
      |    ... content of the supercard here ...
      | END_POSITIONS
      |
      | The syntax of supercard's content follows below:
      
         NB:
         Atomic positions for all the images are specified within the "BEGIN_POSITIONS" / END_POSITIONS
         supercard, where each instance of "ATOMIC_POSITIONS" card is prefixed either by "FIRST_IMAGE",
         "INTERMEDIATE_IMAGE", or "LAST_IMAGE" keywords.
         IF "lfcp" == .TRUE., total charges for all images have to be specified with "TOTAL_CHARGE" cards.
         
         Note that intermediate images are optional, i.e., there can be none or any number of
         "INTERMEDIATE_IMAGE" images.
         
         ########################################################################
         | SUPERCARD: FIRST_IMAGE
         | this supercard starts with the keyword:
         |
         | FIRST_IMAGE
         |    ... content of the supercard here ...
         |
         | The syntax of supercard's content follows below:
         
            ========================================================================
            CARD: ATOMIC_POSITIONS { alat | bohr | angstrom | crystal | crystal_sg }
            
               For the description of ATOMIC_POSITIONS card see file: "" or INPUT_PW.txt
               
            ===END OF CARD==========================================================
            
            
            ========================================================================
            CARD: TOTAL_CHARGE 
            
               OPTIONAL CARD, NEEDED ONLY IF "LFCP" == .TRUE.
               
               /////////////////////////////////////////
               // Syntax:                             //
               /////////////////////////////////////////
               
                  TOTAL_CHARGE 
                     tot_charge
               
               /////////////////////////////////////////
               
               DESCRIPTION OF ITEMS:
               
                  +--------------------------------------------------------------------
                  Variables:      tot_charge
                  
                  Type:           REAL
                  Description:    tot_charge is the total charge of the system.
                  +--------------------------------------------------------------------
                  
                  
            ===END OF CARD==========================================================
            
            
         ### END OF SUPERCARD :  FIRST_IMAGE ####################################
         
         
         ########################################################################
         | SUPERCARD: INTERMEDIATE_IMAGE
         | this supercard starts with the keyword:
         |
         | INTERMEDIATE_IMAGE
         |    ... content of the supercard here ...
         |
         | REMARK:
         | There can be any number (including zero) of INTERMEDIATE_IMAGE supercards.
         |
         | The syntax of supercard's content follows below:
         
            ========================================================================
            CARD: ATOMIC_POSITIONS { alat | bohr | angstrom | crystal | crystal_sg }
            
               For the description of ATOMIC_POSITIONS card see file: "" or INPUT_PW.txt
               
            ===END OF CARD==========================================================
            
            
            ========================================================================
            CARD: TOTAL_CHARGE 
            
               OPTIONAL CARD, NEEDED ONLY IF "LFCP" == .TRUE.
               
               /////////////////////////////////////////
               // Syntax:                             //
               /////////////////////////////////////////
               
                  TOTAL_CHARGE 
                     tot_charge
               
               /////////////////////////////////////////
               
               DESCRIPTION OF ITEMS:
               
                  +--------------------------------------------------------------------
                  Variables:      tot_charge
                  
                  Type:           REAL
                  Description:    tot_charge is the total charge of the system.
                  +--------------------------------------------------------------------
                  
                  
            ===END OF CARD==========================================================
            
            
         ### END OF SUPERCARD :  INTERMEDIATE_IMAGE #############################
         
         
         ########################################################################
         | SUPERCARD: LAST_IMAGE
         | this supercard starts with the keyword:
         |
         | LAST_IMAGE
         |    ... content of the supercard here ...
         |
         | The syntax of supercard's content follows below:
         
            ========================================================================
            CARD: ATOMIC_POSITIONS { alat | bohr | angstrom | crystal | crystal_sg }
            
               For the description of ATOMIC_POSITIONS card see file: "" or INPUT_PW.txt
               
            ===END OF CARD==========================================================
            
            
            ========================================================================
            CARD: TOTAL_CHARGE 
            
               OPTIONAL CARD, NEEDED ONLY IF "LFCP" == .TRUE.
               
               /////////////////////////////////////////
               // Syntax:                             //
               /////////////////////////////////////////
               
                  TOTAL_CHARGE 
                     tot_charge
               
               /////////////////////////////////////////
               
               DESCRIPTION OF ITEMS:
               
                  +--------------------------------------------------------------------
                  Variables:      tot_charge
                  
                  Type:           REAL
                  Description:    tot_charge is the total charge of the system.
                  +--------------------------------------------------------------------
                  
                  
            ===END OF CARD==========================================================
            
            
         ### END OF SUPERCARD :  LAST_IMAGE #####################################
         
         
      ### END OF SUPERCARD :  BEGIN_POSITIONS/END_POSITIONS ##################
      
      
      Here can follow other pw specific cards ...
      
   ### END OF SUPERCARD :  BEGIN_ENGINE_INPUT/END_ENGINE_INPUT ############
   
   
### END OF SUPERCARD :  BEGIN/END ######################################


This file has been created by helpdoc utility on Sat Dec 18 20:08:38 CET 2021
